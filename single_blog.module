<?php
// $Id$

/**
 * @file
 * Enables a single-user blog.
 */

// After you learn Form API in Chapter 5, you'll be able to
// make these settings configurable.
define('SINGLE_BLOG_NODE_TYPE', 'article');
define('SINGLE_BLOG_LIST_COUNT', 5);

/**
 * Returns a list of blog entries.
 *
 * @param $number
 *   The number of blog entries to return.
 * @return
 *   A result set object containing the list of blog entries.
 */
function single_blog_list($number) {
  // Use the Database API to retrieve our data.
  // @see http://drupal.org/node/310069
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created', 'uid'))
    ->condition('type', SINGLE_BLOG_NODE_TYPE)
    ->condition('status', 1)
    ->orderBy('created', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute();

  return $query;
}

/**
 * Implements hook_block_info().
 */
function single_blog_block_info() {
  $blocks = array();

  // The array key defines the $delta parameter used in all
  // other block hooks.
  $blocks['recent'] = array(
    // The name of the block on the blocks administration page.
    'info' => t('Recent blog posts'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Second draft!
 *
 * @pararm $delta
 *   The name of the requested block.
 */
function single_blog_block_view($delta = '') {
  // Create an empty block.
  $block = array(
    'subject' => '',
    'content' => '',
  );

  // Check which block is being requested.
  if ($delta == 'recent') {
    // Set the block title.
    $block['subject'] = t('Recent blog posts');

    // Check if the user can access content.
    if (user_access('access content')) {
      // Retrieve the most recent nodes.
      $result = single_blog_list(SINGLE_BLOG_LIST_COUNT);

      // Create links for each blog entry.
      $items = array();
      foreach ($result as $node) {
        $items[] = array(
          'data' => l($node->title, 'node/' . $node->nid),
          'class' => array('node-' . $node->nid),
        );
      }

      if (!empty($items)) {
        // Theme the list of blog entries.
        $block['content']['list'] = array(
          '#theme' => 'item_list__single_blog',
          '#items' => $items,
        );
      }
    }
  }

  return $block;
}
